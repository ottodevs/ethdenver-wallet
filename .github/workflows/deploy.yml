name: Deploy Website

on:
    push:
        branches: ['main']
    pull_request:
        types: [opened, synchronize, reopened]
    workflow_dispatch:

permissions:
    contents: read
    pull-requests: write
    deployments: write

# Prevent concurrent executions and cancel builds in progress except on main
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
    deploy:
        runs-on: ubuntu-latest
        timeout-minutes: 15
        environment:
            name: ${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 1

            # Extract Node.js and pnpm versions from package.json
            - name: Extract versions from package.json
              id: versions
              run: |
                  NODE_VERSION=$(node -p "require('./package.json').engines?.node || '22'")
                  PNPM_VERSION=$(node -p "require('./package.json').packageManager?.split('@')[1]?.split('+')[0] || '10.6.1'")
                  echo "node-version=$NODE_VERSION" >> $GITHUB_OUTPUT
                  echo "pnpm-version=$PNPM_VERSION" >> $GITHUB_OUTPUT

            # Setup pnpm
            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ steps.versions.outputs.pnpm-version }}

            # Setup Node.js
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ steps.versions.outputs.node-version }}
                  cache: 'pnpm'

            # Install dependencies
            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            # Deploy to Vercel
            - name: Deploy to Vercel
              id: vercel-deploy
              uses: EvanNotFound/vercel-deployment-for-github-actions@v1
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}
                  WORKING_DIRECTORY: ./sub-directory
                  PRODUCTION: ${{ github.ref == 'refs/heads/main' }}
